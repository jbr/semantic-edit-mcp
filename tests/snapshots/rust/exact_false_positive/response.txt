STAGED: Replace

===DIFF===
     /// Validates the user's email format
     pub fn validate_email(&self) -> Result<(), String> {
         if !self.email.contains('@') {
-            return Err("Invalid email format".to_string());
+            return Err("Invalid email format: missing @ symbol".to_string());
         }
         Ok(())
     }


==========STAGED==========


{
  "operation": {
    "target": {
      "position": "replace",
      "anchor_text": "\"Invalid email format\"",
      "ancestor_node_type": "string_literal"
    },
    "content": "\"Invalid email format: missing @ symbol\""
  },
  "file_path": "tests/snapshots/rust/exact_false_positive/input.rs",
  "language_name": "rust"
}


==========COMMIT==========


Replace operation result:
Successfully replaced string_literal node

===DIFF===
     /// Validates the user's email format
     pub fn validate_email(&self) -> Result<(), String> {
         if !self.email.contains('@') {
-            return Err("Invalid email format".to_string());
+            return Err("Invalid email format: missing @ symbol".to_string());
         }
         Ok(())
     }