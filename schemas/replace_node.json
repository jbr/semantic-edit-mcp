{
    "type": "object",
    "properties": {
        "file_path": {
            "type": "string",
            "description": "Path to the source file. Language support: Rust, JSON, Markdown"
        },
        "selector": {
            "type": "object",
            "description": "Text-anchored node selector using exact text and AST navigation. ðŸ’¡ Discovery tips: Use read_documentation once per language to see available node types. Omit ancestor_node_type to explore valid options in a particular location.",
            "properties": {
                "anchor_text": {
                    "type": "string",
                    "description": "Exact short unique snippet to find in the source code as an anchor point. ðŸ’¡ Keep it short but unique! Examples: 'fn main', 'struct User', '\"key\":', '# Heading'. Avoid large text blocks."
                },
                "ancestor_node_type": {
                    "type": "string",
                    "description": "AST node type to walk up to from the anchor point. Optional - omit to explore available options!",
                    "examples": ["function_item", "struct_item", "impl_item", "pair", "list_item", "expression_statement", "block"]
                }
            },
            "required": ["anchor_text"],
            "additionalProperties": false
        },
        "new_content": {
            "type": "string",
            "description": "New content to replace the node"
        },
        "preview_only": {
            "type": "boolean",
            "description": "If true, show preview of changes without writing to file. ðŸ’¡ Always preview first to verify you're targeting the right node!",
            "default": false
        },
        "language": {
            "type": "string",
            "description": "Optional language hint. If not provided, language will be detected from file extension.",
            "enum": ["rust", "json", "markdown"]
        }
    },
    "required": ["file_path", "selector", "new_content"],
    "additionalProperties": false,
    "examples": [
        {
            "description": "Replace a Rust function",
            "file_path": "src/main.rs",
            "selector": {
                "anchor_text": "fn hello",
                "ancestor_node_type": "function_item"
            },
            "new_content": "fn hello() { println!(\"Hello, world!\"); }",
            "preview_only": true
        },
        {
            "description": "Replace JSON pair", 
            "file_path": "config.json",
            "selector": {
                "anchor_text": "\"port\":",
                "ancestor_node_type": "pair"
            },
            "new_content": "\"port\": 8080"
        },
        {
            "description": "Discovery technique - see what ancestors are available",
            "file_path": "src/lib.rs",
            "selector": {
                "anchor_text": "pub struct"
            },
            "preview_only": true
        }
    ]
}
