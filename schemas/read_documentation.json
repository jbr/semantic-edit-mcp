{
  "name": "read_documentation",
  "description": "ðŸ”‘ ESSENTIAL: Get all available AST node types for semantic editing. Use this FIRST to discover which ancestor_node_type values are valid for your language (e.g., 'identifier', 'function_item', 'number', 'string'). Required for effective use of stage_operation.",
  "inputSchema": {
    "type": "object",
    "description": "List all available AST node types for semantic editing operations. Essential first step for understanding what node types can be targeted with ancestor_node_type parameter.",
    "properties": {
      "language": {
        "type": "string",
        "description": "Programming language to get AST node types for. Use this to discover which node types are available for targeting in your selectors (e.g., 'identifier', 'function_item', 'number', 'string').",
        "enum": ["rust", "json", "markdown"]
      }
    },
    "required": ["language"],
    "additionalProperties": false,
    "examples": [
      {
        "description": "Get all available AST node types for Rust",
        "language": "rust"
      },
      {
        "description": "Discover JSON node types for targeting",
        "language": "json"
      },
      {
        "description": "List Markdown AST structure options",
        "language": "markdown"
      }
    ]
  }
}
